<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>H·ªçc V·∫≠t L√Ω L·ªõp 11</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        body {
            box-sizing: border-box;
        }
        .formula-card {
            transition: all 0.3s ease;
        }
        .formula-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(0,0,0,0.15);
        }
        .tab-active {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
        }
        .progress-bar {
            transition: width 0.5s ease;
        }
        .quiz-option {
            transition: all 0.2s ease;
        }
        .quiz-option:hover {
            background-color: #f3f4f6;
        }
        .quiz-correct {
            background-color: #d1fae5 !important;
            border-color: #10b981 !important;
        }
        .quiz-incorrect {
            background-color: #fee2e2 !important;
            border-color: #ef4444 !important;
        }
    </style>
</head>
<body class="bg-gradient-to-br from-blue-50 to-indigo-100 min-h-full">
    <header class="bg-white shadow-lg">
        <div class="max-w-6xl mx-auto px-4 py-6">
            <div class="flex items-center justify-between">
                <div class="flex items-center space-x-3">
                    <div class="w-12 h-12 bg-gradient-to-r from-blue-500 to-purple-600 rounded-lg flex items-center justify-center">
                        <span class="text-white text-xl font-bold">‚ö°</span>
                    </div>
                    <div>
                        <h1 class="text-2xl font-bold text-gray-800">V·∫≠t L√Ω L·ªõp 11</h1>
                        <p class="text-gray-600 text-sm">H·ªçc c√¥ng th·ª©c v√† l√Ω thuy·∫øt hi·ªáu qu·∫£</p>
                    </div>
                </div>
                <div class="flex items-center space-x-4">
                    <div class="text-right">
                        <p class="text-sm text-gray-600">Ti·∫øn ƒë·ªô h·ªçc t·∫≠p</p>
                        <div class="w-32 h-2 bg-gray-200 rounded-full mt-1">
                            <div id="progressBar" class="progress-bar h-2 bg-gradient-to-r from-green-400 to-blue-500 rounded-full" style="width: 0%"></div>
                        </div>
                    </div>
                    <span id="progressText" class="text-lg font-semibold text-gray-700">0%</span>
                </div>
            </div>
        </div>
    </header>

    <main class="max-w-6xl mx-auto px-4 py-8">
        <!-- Navigation Tabs -->
        <div class="flex flex-wrap gap-2 mb-8 bg-white p-2 rounded-xl shadow-md">
            <button onclick="showTab('formulas')" id="tab-formulas" class="tab-active px-6 py-3 rounded-lg font-medium transition-all">
                üìê C√¥ng Th·ª©c
            </button>
            <button onclick="showTab('theory')" id="tab-theory" class="px-6 py-3 rounded-lg font-medium text-gray-600 hover:bg-gray-100 transition-all">
                üìö L√Ω Thuy·∫øt
            </button>
            <button onclick="showTab('quiz')" id="tab-quiz" class="px-6 py-3 rounded-lg font-medium text-gray-600 hover:bg-gray-100 transition-all">
                üß† Ki·ªÉm Tra
            </button>
            <button onclick="showTab('calculator')" id="tab-calculator" class="px-6 py-3 rounded-lg font-medium text-gray-600 hover:bg-gray-100 transition-all">
                üî¢ M√°y T√≠nh
            </button>
        </div>

        <!-- Formulas Tab -->
        <div id="formulas-content" class="tab-content">
            <div class="mb-6">
                <div class="flex justify-between items-center mb-4">
                    <h2 class="text-2xl font-bold text-gray-800">C√¥ng Th·ª©c V·∫≠t L√Ω L·ªõp 11</h2>
                    <button onclick="showAddFormulaModal()" class="bg-green-500 text-white px-4 py-2 rounded-lg font-medium hover:bg-green-600 transition-all flex items-center gap-2">
                        ‚ûï Th√™m C√¥ng Th·ª©c
                    </button>
                </div>
                <div class="flex flex-wrap gap-2 mb-6">
                    <button onclick="filterFormulas('all')" class="filter-btn bg-blue-500 text-white px-4 py-2 rounded-lg font-medium">T·∫•t C·∫£</button>
                    <button onclick="filterFormulas('mechanics')" class="filter-btn bg-gray-200 text-gray-700 px-4 py-2 rounded-lg font-medium hover:bg-gray-300">C∆° H·ªçc</button>
                    <button onclick="filterFormulas('thermodynamics')" class="filter-btn bg-gray-200 text-gray-700 px-4 py-2 rounded-lg font-medium hover:bg-gray-300">Nhi·ªát H·ªçc</button>
                    <button onclick="filterFormulas('electricity')" class="filter-btn bg-gray-200 text-gray-700 px-4 py-2 rounded-lg font-medium hover:bg-gray-300">ƒêi·ªán H·ªçc</button>
                    <button onclick="filterFormulas('custom')" class="filter-btn bg-gray-200 text-gray-700 px-4 py-2 rounded-lg font-medium hover:bg-gray-300">C·ªßa T√¥i</button>
                </div>
            </div>

            <div id="formulas-grid" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                <!-- Formulas will be populated by JavaScript -->
            </div>
        </div>

        <!-- Theory Tab -->
        <div id="theory-content" class="tab-content hidden">
            <h2 class="text-2xl font-bold text-gray-800 mb-6">L√Ω Thuy·∫øt V·∫≠t L√Ω L·ªõp 11</h2>
            <div class="space-y-6">
                <div class="bg-white rounded-xl shadow-md p-6">
                    <h3 class="text-xl font-bold text-blue-600 mb-4">üîÑ Dao ƒê·ªông C∆°</h3>
                    <div class="space-y-3 text-gray-700">
                        <p><strong>ƒê·ªãnh nghƒ©a:</strong> Dao ƒë·ªông c∆° l√† chuy·ªÉn ƒë·ªông qua l·∫°i c·ªßa v·∫≠t quanh v·ªã tr√≠ c√¢n b·∫±ng.</p>
                        <p><strong>ƒê·∫∑c ƒëi·ªÉm:</strong> C√≥ t√≠nh tu·∫ßn ho√†n, l·∫∑p l·∫°i sau nh·ªØng kho·∫£ng th·ªùi gian b·∫±ng nhau.</p>
                        <p><strong>C√°c ƒë·∫°i l∆∞·ª£ng:</strong></p>
                        <ul class="list-disc list-inside ml-4 space-y-1">
                            <li>Bi√™n ƒë·ªô A: ƒê·ªô l·ªách c·ª±c ƒë·∫°i kh·ªèi v·ªã tr√≠ c√¢n b·∫±ng</li>
                            <li>Chu k√¨ T: Th·ªùi gian th·ª±c hi·ªán m·ªôt dao ƒë·ªông to√†n ph·∫ßn</li>
                            <li>T·∫ßn s·ªë f: S·ªë dao ƒë·ªông th·ª±c hi·ªán trong 1 gi√¢y</li>
                        </ul>
                    </div>
                </div>

                <div class="bg-white rounded-xl shadow-md p-6">
                    <h3 class="text-xl font-bold text-green-600 mb-4">üå°Ô∏è Nhi·ªát ƒê·ªông H·ªçc</h3>
                    <div class="space-y-3 text-gray-700">
                        <p><strong>Nguy√™n l√Ω I:</strong> ƒê·ªô bi·∫øn thi√™n n·ªôi nƒÉng c·ªßa h·ªá b·∫±ng t·ªïng c√¥ng v√† nhi·ªát l∆∞·ª£ng m√† h·ªá nh·∫≠n ƒë∆∞·ª£c.</p>
                        <p><strong>C√¥ng th·ª©c:</strong> ŒîU = A + Q</p>
                        <p><strong>Qu√° tr√¨nh ƒë·∫≥ng nhi·ªát:</strong> T = const, ŒîU = 0, A = -Q</p>
                        <p><strong>Qu√° tr√¨nh ƒë·∫≥ng t√≠ch:</strong> V = const, A = 0, ŒîU = Q</p>
                        <p><strong>Qu√° tr√¨nh ƒë·∫≥ng √°p:</strong> p = const, A = p.ŒîV</p>
                    </div>
                </div>

                <div class="bg-white rounded-xl shadow-md p-6">
                    <h3 class="text-xl font-bold text-purple-600 mb-4">‚ö° ƒêi·ªán H·ªçc</h3>
                    <div class="space-y-3 text-gray-700">
                        <p><strong>ƒê·ªãnh lu·∫≠t Ohm:</strong> C∆∞·ªùng ƒë·ªô d√≤ng ƒëi·ªán t·ªâ l·ªá thu·∫≠n v·ªõi hi·ªáu ƒëi·ªán th·∫ø v√† t·ªâ l·ªá ngh·ªãch v·ªõi ƒëi·ªán tr·ªü.</p>
                        <p><strong>C√¥ng su·∫•t ƒëi·ªán:</strong> P = UI = I¬≤R = U¬≤/R</p>
                        <p><strong>ƒêi·ªán tr·ªü t∆∞∆°ng ƒë∆∞∆°ng:</strong></p>
                        <ul class="list-disc list-inside ml-4 space-y-1">
                            <li>M·∫Øc n·ªëi ti·∫øp: R = R‚ÇÅ + R‚ÇÇ + R‚ÇÉ + ...</li>
                            <li>M·∫Øc song song: 1/R = 1/R‚ÇÅ + 1/R‚ÇÇ + 1/R‚ÇÉ + ...</li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>

        <!-- Quiz Tab -->
        <div id="quiz-content" class="tab-content hidden">
            <div class="bg-white rounded-xl shadow-md p-6">
                <h2 class="text-2xl font-bold text-gray-800 mb-6">Ki·ªÉm Tra Ki·∫øn Th·ª©c</h2>
                <div id="quiz-container">
                    <div class="mb-6">
                        <div class="flex justify-between items-center mb-4">
                            <span class="text-lg font-medium">C√¢u <span id="question-number">1</span>/5</span>
                            <span class="text-sm text-gray-600">ƒêi·ªÉm: <span id="quiz-score">0</span></span>
                        </div>
                        <div class="w-full bg-gray-200 rounded-full h-2 mb-4">
                            <div id="quiz-progress" class="bg-blue-500 h-2 rounded-full transition-all" style="width: 20%"></div>
                        </div>
                    </div>
                    
                    <div id="question-container">
                        <h3 id="question-text" class="text-xl font-medium mb-6">ƒêang t·∫£i c√¢u h·ªèi...</h3>
                        <div id="options-container" class="space-y-3">
                            <!-- Options will be populated by JavaScript -->
                        </div>
                    </div>
                    
                    <div class="mt-6 flex justify-between">
                        <button id="prev-btn" onclick="previousQuestion()" class="px-6 py-2 bg-gray-300 text-gray-700 rounded-lg font-medium hover:bg-gray-400 transition-all" disabled>
                            ‚Üê C√¢u Tr∆∞·ªõc
                        </button>
                        <button id="next-btn" onclick="nextQuestion()" class="px-6 py-2 bg-blue-500 text-white rounded-lg font-medium hover:bg-blue-600 transition-all">
                            C√¢u Ti·∫øp ‚Üí
                        </button>
                    </div>
                </div>
                
                <div id="quiz-result" class="hidden text-center">
                    <h3 class="text-2xl font-bold mb-4">K·∫øt Qu·∫£ Ki·ªÉm Tra</h3>
                    <div class="text-6xl mb-4">üéâ</div>
                    <p class="text-xl mb-2">B·∫°n ƒë√£ tr·∫£ l·ªùi ƒë√∫ng <span id="final-score">0</span>/5 c√¢u</p>
                    <p id="result-message" class="text-lg text-gray-600 mb-6"></p>
                    <button onclick="restartQuiz()" class="px-6 py-3 bg-blue-500 text-white rounded-lg font-medium hover:bg-blue-600 transition-all">
                        L√†m L·∫°i
                    </button>
                </div>
            </div>
        </div>

        <!-- Calculator Tab -->
        <div id="calculator-content" class="tab-content hidden">
            <div class="bg-white rounded-xl shadow-md p-6">
                <h2 class="text-2xl font-bold text-gray-800 mb-6">M√°y T√≠nh V·∫≠t L√Ω</h2>
                
                <div class="grid grid-cols-1 lg:grid-cols-2 gap-6">
                    <!-- Kinematic Calculator -->
                    <div class="bg-gradient-to-br from-blue-50 to-blue-100 p-6 rounded-xl">
                        <h3 class="text-xl font-bold text-blue-700 mb-4">üöÄ T√≠nh To√°n Chuy·ªÉn ƒê·ªông</h3>
                        <div class="space-y-4">
                            <div>
                                <label for="velocity" class="block text-sm font-medium text-gray-700 mb-1">V·∫≠n t·ªëc (m/s)</label>
                                <input type="number" id="velocity" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                            </div>
                            <div>
                                <label for="time" class="block text-sm font-medium text-gray-700 mb-1">Th·ªùi gian (s)</label>
                                <input type="number" id="time" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                            </div>
                            <button onclick="calculateDistance()" class="w-full bg-blue-500 text-white py-2 rounded-lg font-medium hover:bg-blue-600 transition-all">
                                T√≠nh Qu√£ng ƒê∆∞·ªùng
                            </button>
                            <div id="distance-result" class="p-3 bg-white rounded-lg border hidden">
                                <p class="font-medium">K·∫øt qu·∫£:</p>
                                <p id="distance-value" class="text-lg text-blue-600"></p>
                            </div>
                        </div>
                    </div>

                    <!-- Power Calculator -->
                    <div class="bg-gradient-to-br from-green-50 to-green-100 p-6 rounded-xl">
                        <h3 class="text-xl font-bold text-green-700 mb-4">‚ö° T√≠nh C√¥ng Su·∫•t ƒêi·ªán</h3>
                        <div class="space-y-4">
                            <div>
                                <label for="voltage" class="block text-sm font-medium text-gray-700 mb-1">Hi·ªáu ƒëi·ªán th·∫ø (V)</label>
                                <input type="number" id="voltage" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-green-500">
                            </div>
                            <div>
                                <label for="current" class="block text-sm font-medium text-gray-700 mb-1">C∆∞·ªùng ƒë·ªô d√≤ng ƒëi·ªán (A)</label>
                                <input type="number" id="current" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-green-500">
                            </div>
                            <button onclick="calculatePower()" class="w-full bg-green-500 text-white py-2 rounded-lg font-medium hover:bg-green-600 transition-all">
                                T√≠nh C√¥ng Su·∫•t
                            </button>
                            <div id="power-result" class="p-3 bg-white rounded-lg border hidden">
                                <p class="font-medium">K·∫øt qu·∫£:</p>
                                <p id="power-value" class="text-lg text-green-600"></p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </main>

    <!-- Add Formula Modal -->
    <div id="add-formula-modal" class="fixed inset-0 bg-black bg-opacity-50 hidden flex items-center justify-center z-50">
        <div class="bg-white rounded-xl shadow-2xl p-6 w-full max-w-md mx-4">
            <div class="flex justify-between items-center mb-6">
                <h3 class="text-xl font-bold text-gray-800">Th√™m C√¥ng Th·ª©c M·ªõi</h3>
                <button onclick="hideAddFormulaModal()" class="text-gray-500 hover:text-gray-700 text-2xl">√ó</button>
            </div>
            
            <form id="add-formula-form" onsubmit="addNewFormula(event)" class="space-y-4">
                <div>
                    <label for="formula-title" class="block text-sm font-medium text-gray-700 mb-1">T√™n c√¥ng th·ª©c</label>
                    <input type="text" id="formula-title" required class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-green-500" placeholder="V√≠ d·ª•: ƒê·ªãnh lu·∫≠t Newton II">
                </div>
                
                <div>
                    <label for="formula-equation" class="block text-sm font-medium text-gray-700 mb-1">C√¥ng th·ª©c</label>
                    <input type="text" id="formula-equation" required class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-green-500" placeholder="V√≠ d·ª•: F = ma">
                </div>
                
                <div>
                    <label for="formula-category" class="block text-sm font-medium text-gray-700 mb-1">Ch·ªß ƒë·ªÅ</label>
                    <select id="formula-category" required class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-green-500">
                        <option value="">Ch·ªçn ch·ªß ƒë·ªÅ</option>
                        <option value="mechanics">C∆° H·ªçc</option>
                        <option value="thermodynamics">Nhi·ªát H·ªçc</option>
                        <option value="electricity">ƒêi·ªán H·ªçc</option>
                        <option value="custom">Kh√°c</option>
                    </select>
                </div>
                
                <div>
                    <label for="formula-description" class="block text-sm font-medium text-gray-700 mb-1">M√¥ t·∫£</label>
                    <textarea id="formula-description" required rows="3" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-green-500" placeholder="Gi·∫£i th√≠ch √Ω nghƒ©a c·ªßa c√¥ng th·ª©c"></textarea>
                </div>
                
                <div>
                    <label for="formula-variables" class="block text-sm font-medium text-gray-700 mb-1">K√Ω hi·ªáu v√† ƒë∆°n v·ªã</label>
                    <textarea id="formula-variables" required rows="2" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-green-500" placeholder="V√≠ d·ª•: F: l·ª±c (N), m: kh·ªëi l∆∞·ª£ng (kg), a: gia t·ªëc (m/s¬≤)"></textarea>
                </div>
                
                <div class="flex gap-3 pt-4">
                    <button type="button" onclick="hideAddFormulaModal()" class="flex-1 px-4 py-2 bg-gray-300 text-gray-700 rounded-lg font-medium hover:bg-gray-400 transition-all">
                        H·ªßy
                    </button>
                    <button type="submit" class="flex-1 px-4 py-2 bg-green-500 text-white rounded-lg font-medium hover:bg-green-600 transition-all">
                        Th√™m C√¥ng Th·ª©c
                    </button>
                </div>
            </form>
        </div>
    </div>

    <script>
        // Data
        const formulas = [
            {
                id: 1,
                category: 'mechanics',
                title: 'V·∫≠n t·ªëc trung b√¨nh',
                formula: 'v = s/t',
                description: 'V·∫≠n t·ªëc b·∫±ng qu√£ng ƒë∆∞·ªùng chia cho th·ªùi gian',
                variables: 'v: v·∫≠n t·ªëc (m/s), s: qu√£ng ƒë∆∞·ªùng (m), t: th·ªùi gian (s)'
            },
            {
                id: 2,
                category: 'mechanics',
                title: 'Gia t·ªëc',
                formula: 'a = Œîv/Œît',
                description: 'Gia t·ªëc b·∫±ng ƒë·ªô bi·∫øn thi√™n v·∫≠n t·ªëc chia cho th·ªùi gian',
                variables: 'a: gia t·ªëc (m/s¬≤), Œîv: ƒë·ªô bi·∫øn thi√™n v·∫≠n t·ªëc (m/s), Œît: th·ªùi gian (s)'
            },
            {
                id: 3,
                category: 'mechanics',
                title: 'Chu k√¨ dao ƒë·ªông',
                formula: 'T = 2œÄ‚àö(l/g)',
                description: 'Chu k√¨ dao ƒë·ªông c·ªßa con l·∫Øc ƒë∆°n',
                variables: 'T: chu k√¨ (s), l: chi·ªÅu d√†i d√¢y (m), g: gia t·ªëc tr·ªçng tr∆∞·ªùng (m/s¬≤)'
            },
            {
                id: 4,
                category: 'thermodynamics',
                title: 'Nguy√™n l√Ω I nhi·ªát ƒë·ªông h·ªçc',
                formula: 'ŒîU = A + Q',
                description: 'ƒê·ªô bi·∫øn thi√™n n·ªôi nƒÉng b·∫±ng t·ªïng c√¥ng v√† nhi·ªát l∆∞·ª£ng',
                variables: 'ŒîU: ƒë·ªô bi·∫øn thi√™n n·ªôi nƒÉng (J), A: c√¥ng (J), Q: nhi·ªát l∆∞·ª£ng (J)'
            },
            {
                id: 5,
                category: 'thermodynamics',
                title: 'Ph∆∞∆°ng tr√¨nh tr·∫°ng th√°i kh√≠ l√≠ t∆∞·ªüng',
                formula: 'pV = nRT',
                description: 'M·ªëi quan h·ªá gi·ªØa √°p su·∫•t, th·ªÉ t√≠ch v√† nhi·ªát ƒë·ªô',
                variables: 'p: √°p su·∫•t (Pa), V: th·ªÉ t√≠ch (m¬≥), n: s·ªë mol, R: h·∫±ng s·ªë kh√≠, T: nhi·ªát ƒë·ªô (K)'
            },
            {
                id: 6,
                category: 'electricity',
                title: 'ƒê·ªãnh lu·∫≠t Ohm',
                formula: 'I = U/R',
                description: 'C∆∞·ªùng ƒë·ªô d√≤ng ƒëi·ªán t·ªâ l·ªá thu·∫≠n v·ªõi hi·ªáu ƒëi·ªán th·∫ø',
                variables: 'I: c∆∞·ªùng ƒë·ªô d√≤ng ƒëi·ªán (A), U: hi·ªáu ƒëi·ªán th·∫ø (V), R: ƒëi·ªán tr·ªü (Œ©)'
            },
            {
                id: 7,
                category: 'electricity',
                title: 'C√¥ng su·∫•t ƒëi·ªán',
                formula: 'P = UI',
                description: 'C√¥ng su·∫•t b·∫±ng t√≠ch hi·ªáu ƒëi·ªán th·∫ø v√† c∆∞·ªùng ƒë·ªô d√≤ng ƒëi·ªán',
                variables: 'P: c√¥ng su·∫•t (W), U: hi·ªáu ƒëi·ªán th·∫ø (V), I: c∆∞·ªùng ƒë·ªô d√≤ng ƒëi·ªán (A)'
            },
            {
                id: 8,
                category: 'electricity',
                title: 'ƒêi·ªán tr·ªü m·∫Øc n·ªëi ti·∫øp',
                formula: 'R = R‚ÇÅ + R‚ÇÇ + R‚ÇÉ',
                description: 'ƒêi·ªán tr·ªü t∆∞∆°ng ƒë∆∞∆°ng khi m·∫Øc n·ªëi ti·∫øp',
                variables: 'R: ƒëi·ªán tr·ªü t∆∞∆°ng ƒë∆∞∆°ng (Œ©), R‚ÇÅ, R‚ÇÇ, R‚ÇÉ: c√°c ƒëi·ªán tr·ªü th√†nh ph·∫ßn (Œ©)'
            }
        ];

        const quizQuestions = [
            {
                question: 'C√¥ng th·ª©c t√≠nh v·∫≠n t·ªëc trung b√¨nh l√† g√¨?',
                options: ['v = s/t', 'v = s√ót', 'v = t/s', 'v = s + t'],
                correct: 0
            },
            {
                question: 'ƒê∆°n v·ªã c·ªßa gia t·ªëc l√† g√¨?',
                options: ['m/s', 'm/s¬≤', 'm¬≤/s', 's/m'],
                correct: 1
            },
            {
                question: 'Nguy√™n l√Ω I nhi·ªát ƒë·ªông h·ªçc ƒë∆∞·ª£c bi·ªÉu di·ªÖn b·∫±ng c√¥ng th·ª©c n√†o?',
                options: ['ŒîU = A - Q', 'ŒîU = A + Q', 'ŒîU = A √ó Q', 'ŒîU = Q - A'],
                correct: 1
            },
            {
                question: 'Theo ƒë·ªãnh lu·∫≠t Ohm, c∆∞·ªùng ƒë·ªô d√≤ng ƒëi·ªán ƒë∆∞·ª£c t√≠nh b·∫±ng?',
                options: ['I = U √ó R', 'I = U/R', 'I = R/U', 'I = U + R'],
                correct: 1
            },
            {
                question: 'Chu k√¨ dao ƒë·ªông c·ªßa con l·∫Øc ƒë∆°n ph·ª• thu·ªôc v√†o?',
                options: ['Kh·ªëi l∆∞·ª£ng qu·∫£ n·∫∑ng', 'Bi√™n ƒë·ªô dao ƒë·ªông', 'Chi·ªÅu d√†i d√¢y treo', 'T·∫•t c·∫£ c√°c y·∫øu t·ªë tr√™n'],
                correct: 2
            }
        ];

        // State
        let currentTab = 'formulas';
        let currentFilter = 'all';
        let currentQuestion = 0;
        let quizScore = 0;
        let answeredQuestions = [];
        let studiedFormulas = new Set();
        let customFormulas = JSON.parse(localStorage.getItem('customFormulas') || '[]');
        let nextFormulaId = Math.max(...formulas.map(f => f.id), ...customFormulas.map(f => f.id || 0)) + 1;

        // Initialize
        document.addEventListener('DOMContentLoaded', function() {
            renderFormulas();
            loadQuestion();
            updateProgress();
        });

        // Tab Management
        function showTab(tabName) {
            // Hide all tabs
            document.querySelectorAll('.tab-content').forEach(tab => {
                tab.classList.add('hidden');
            });
            
            // Remove active class from all tab buttons
            document.querySelectorAll('[id^="tab-"]').forEach(btn => {
                btn.classList.remove('tab-active');
                btn.classList.add('text-gray-600', 'hover:bg-gray-100');
            });
            
            // Show selected tab
            document.getElementById(tabName + '-content').classList.remove('hidden');
            
            // Add active class to selected tab button
            const activeBtn = document.getElementById('tab-' + tabName);
            activeBtn.classList.add('tab-active');
            activeBtn.classList.remove('text-gray-600', 'hover:bg-gray-100');
            
            currentTab = tabName;
        }

        // Formula Management
        function renderFormulas() {
            const grid = document.getElementById('formulas-grid');
            let allFormulas = [...formulas, ...customFormulas];
            
            const filteredFormulas = currentFilter === 'all' 
                ? allFormulas
                : currentFilter === 'custom'
                ? customFormulas
                : allFormulas.filter(f => f.category === currentFilter);
            
            grid.innerHTML = filteredFormulas.map(formula => `
                <div class="formula-card bg-white rounded-xl shadow-md p-6 border-l-4 ${formula.isCustom ? 'border-green-500' : 'border-blue-500'}">
                    <div class="flex justify-between items-start mb-3">
                        <div class="flex-1">
                            <h3 class="text-lg font-bold text-gray-800">${formula.title}</h3>
                            ${formula.isCustom ? '<span class="text-xs bg-green-100 text-green-700 px-2 py-1 rounded-full">C·ªßa t√¥i</span>' : ''}
                        </div>
                        <div class="flex gap-2">
                            <button onclick="markAsStudied(${formula.id})" class="text-sm px-3 py-1 rounded-full ${studiedFormulas.has(formula.id) ? 'bg-green-100 text-green-700' : 'bg-gray-100 text-gray-600'} hover:bg-green-200 transition-all">
                                ${studiedFormulas.has(formula.id) ? '‚úì ƒê√£ h·ªçc' : 'ƒê√°nh d·∫•u'}
                            </button>
                            ${formula.isCustom ? `<button onclick="deleteFormula(${formula.id})" class="text-sm px-2 py-1 bg-red-100 text-red-600 rounded-full hover:bg-red-200 transition-all">üóëÔ∏è</button>` : ''}
                        </div>
                    </div>
                    <div class="bg-gray-50 p-4 rounded-lg mb-4">
                        <code class="text-xl font-mono text-blue-600">${formula.formula}</code>
                    </div>
                    <p class="text-gray-700 mb-3">${formula.description}</p>
                    <div class="text-sm text-gray-600">
                        <strong>Trong ƒë√≥:</strong> ${formula.variables}
                    </div>
                </div>
            `).join('');
        }

        function filterFormulas(category) {
            currentFilter = category;
            
            // Update filter buttons
            document.querySelectorAll('.filter-btn').forEach(btn => {
                btn.classList.remove('bg-blue-500', 'text-white');
                btn.classList.add('bg-gray-200', 'text-gray-700');
            });
            
            event.target.classList.remove('bg-gray-200', 'text-gray-700');
            event.target.classList.add('bg-blue-500', 'text-white');
            
            renderFormulas();
        }

        function markAsStudied(formulaId) {
            if (studiedFormulas.has(formulaId)) {
                studiedFormulas.delete(formulaId);
            } else {
                studiedFormulas.add(formulaId);
            }
            renderFormulas();
            updateProgress();
        }

        // Quiz Management
        function loadQuestion() {
            if (currentQuestion >= quizQuestions.length) {
                showQuizResult();
                return;
            }
            
            const question = quizQuestions[currentQuestion];
            document.getElementById('question-number').textContent = currentQuestion + 1;
            document.getElementById('question-text').textContent = question.question;
            document.getElementById('quiz-progress').style.width = ((currentQuestion + 1) / quizQuestions.length * 100) + '%';
            
            const optionsContainer = document.getElementById('options-container');
            optionsContainer.innerHTML = question.options.map((option, index) => `
                <button onclick="selectAnswer(${index})" class="quiz-option w-full text-left p-4 border-2 border-gray-200 rounded-lg hover:border-blue-300 transition-all">
                    <span class="font-medium">${String.fromCharCode(65 + index)}.</span> ${option}
                </button>
            `).join('');
            
            // Update navigation buttons
            document.getElementById('prev-btn').disabled = currentQuestion === 0;
            document.getElementById('next-btn').textContent = currentQuestion === quizQuestions.length - 1 ? 'K·∫øt Th√∫c' : 'C√¢u Ti·∫øp ‚Üí';
        }

        function selectAnswer(selectedIndex) {
            const question = quizQuestions[currentQuestion];
            const options = document.querySelectorAll('.quiz-option');
            
            // Remove previous selections
            options.forEach(option => {
                option.classList.remove('quiz-correct', 'quiz-incorrect');
            });
            
            // Mark correct and incorrect answers
            options[question.correct].classList.add('quiz-correct');
            if (selectedIndex !== question.correct) {
                options[selectedIndex].classList.add('quiz-incorrect');
            }
            
            // Update score
            if (selectedIndex === question.correct && !answeredQuestions[currentQuestion]) {
                quizScore++;
                document.getElementById('quiz-score').textContent = quizScore;
            }
            
            answeredQuestions[currentQuestion] = selectedIndex;
            
            // Auto advance after 1.5 seconds
            setTimeout(() => {
                nextQuestion();
            }, 1500);
        }

        function nextQuestion() {
            currentQuestion++;
            loadQuestion();
        }

        function previousQuestion() {
            if (currentQuestion > 0) {
                currentQuestion--;
                loadQuestion();
            }
        }

        function showQuizResult() {
            document.getElementById('quiz-container').classList.add('hidden');
            document.getElementById('quiz-result').classList.remove('hidden');
            document.getElementById('final-score').textContent = quizScore;
            
            let message = '';
            const percentage = (quizScore / quizQuestions.length) * 100;
            
            if (percentage >= 80) {
                message = 'Xu·∫•t s·∫Øc! B·∫°n ƒë√£ n·∫Øm v·ªØng ki·∫øn th·ª©c V·∫≠t l√Ω.';
            } else if (percentage >= 60) {
                message = 'Kh√° t·ªët! H√£y √¥n t·∫≠p th√™m m·ªôt s·ªë ph·∫ßn.';
            } else {
                message = 'C·∫ßn c·ªë g·∫Øng h∆°n! H√£y xem l·∫°i l√Ω thuy·∫øt v√† c√¥ng th·ª©c.';
            }
            
            document.getElementById('result-message').textContent = message;
        }

        function restartQuiz() {
            currentQuestion = 0;
            quizScore = 0;
            answeredQuestions = [];
            document.getElementById('quiz-score').textContent = '0';
            document.getElementById('quiz-container').classList.remove('hidden');
            document.getElementById('quiz-result').classList.add('hidden');
            loadQuestion();
        }

        // Calculator Functions
        function calculateDistance() {
            const velocity = parseFloat(document.getElementById('velocity').value);
            const time = parseFloat(document.getElementById('time').value);
            
            if (isNaN(velocity) || isNaN(time)) {
                alert('Vui l√≤ng nh·∫≠p ƒë·∫ßy ƒë·ªß c√°c gi√° tr·ªã!');
                return;
            }
            
            const distance = velocity * time;
            document.getElementById('distance-result').classList.remove('hidden');
            document.getElementById('distance-value').textContent = `Qu√£ng ƒë∆∞·ªùng: ${distance} m`;
        }

        function calculatePower() {
            const voltage = parseFloat(document.getElementById('voltage').value);
            const current = parseFloat(document.getElementById('current').value);
            
            if (isNaN(voltage) || isNaN(current)) {
                alert('Vui l√≤ng nh·∫≠p ƒë·∫ßy ƒë·ªß c√°c gi√° tr·ªã!');
                return;
            }
            
            const power = voltage * current;
            document.getElementById('power-result').classList.remove('hidden');
            document.getElementById('power-value').textContent = `C√¥ng su·∫•t: ${power} W`;
        }

        // Progress Management
        function updateProgress() {
            const totalFormulas = formulas.length + customFormulas.length;
            const studiedCount = studiedFormulas.size;
            const percentage = totalFormulas > 0 ? Math.round((studiedCount / totalFormulas) * 100) : 0;
            
            document.getElementById('progressBar').style.width = percentage + '%';
            document.getElementById('progressText').textContent = percentage + '%';
        }

        // Modal Management
        function showAddFormulaModal() {
            document.getElementById('add-formula-modal').classList.remove('hidden');
        }

        function hideAddFormulaModal() {
            document.getElementById('add-formula-modal').classList.add('hidden');
            document.getElementById('add-formula-form').reset();
        }

        // Add New Formula
        function addNewFormula(event) {
            event.preventDefault();
            
            const title = document.getElementById('formula-title').value.trim();
            const equation = document.getElementById('formula-equation').value.trim();
            const category = document.getElementById('formula-category').value;
            const description = document.getElementById('formula-description').value.trim();
            const variables = document.getElementById('formula-variables').value.trim();
            
            if (!title || !equation || !category || !description || !variables) {
                showNotification('Vui l√≤ng ƒëi·ªÅn ƒë·∫ßy ƒë·ªß th√¥ng tin!', 'error');
                return;
            }
            
            const newFormula = {
                id: nextFormulaId++,
                category: category,
                title: title,
                formula: equation,
                description: description,
                variables: variables,
                isCustom: true
            };
            
            customFormulas.push(newFormula);
            localStorage.setItem('customFormulas', JSON.stringify(customFormulas));
            
            hideAddFormulaModal();
            renderFormulas();
            updateProgress();
            showNotification('ƒê√£ th√™m c√¥ng th·ª©c m·ªõi th√†nh c√¥ng!', 'success');
        }

        // Delete Formula
        function deleteFormula(formulaId) {
            if (showConfirmDialog('B·∫°n c√≥ ch·∫Øc mu·ªën x√≥a c√¥ng th·ª©c n√†y?')) {
                customFormulas = customFormulas.filter(f => f.id !== formulaId);
                localStorage.setItem('customFormulas', JSON.stringify(customFormulas));
                studiedFormulas.delete(formulaId);
                renderFormulas();
                updateProgress();
                showNotification('ƒê√£ x√≥a c√¥ng th·ª©c th√†nh c√¥ng!', 'success');
            }
        }

        // Notification System
        function showNotification(message, type = 'info') {
            const notification = document.createElement('div');
            notification.className = `fixed top-4 right-4 z-50 px-6 py-3 rounded-lg shadow-lg text-white font-medium transition-all transform translate-x-full`;
            notification.className += type === 'success' ? ' bg-green-500' : type === 'error' ? ' bg-red-500' : ' bg-blue-500';
            notification.textContent = message;
            
            document.body.appendChild(notification);
            
            setTimeout(() => {
                notification.classList.remove('translate-x-full');
            }, 100);
            
            setTimeout(() => {
                notification.classList.add('translate-x-full');
                setTimeout(() => {
                    document.body.removeChild(notification);
                }, 300);
            }, 3000);
        }

        // Confirm Dialog
        function showConfirmDialog(message) {
            const modal = document.createElement('div');
            modal.className = 'fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50';
            modal.innerHTML = `
                <div class="bg-white rounded-xl shadow-2xl p-6 w-full max-w-sm mx-4">
                    <h3 class="text-lg font-bold text-gray-800 mb-4">X√°c nh·∫≠n</h3>
                    <p class="text-gray-600 mb-6">${message}</p>
                    <div class="flex gap-3">
                        <button onclick="this.closest('.fixed').remove(); window.confirmResult = false;" class="flex-1 px-4 py-2 bg-gray-300 text-gray-700 rounded-lg font-medium hover:bg-gray-400 transition-all">
                            H·ªßy
                        </button>
                        <button onclick="this.closest('.fixed').remove(); window.confirmResult = true;" class="flex-1 px-4 py-2 bg-red-500 text-white rounded-lg font-medium hover:bg-red-600 transition-all">
                            X√≥a
                        </button>
                    </div>
                </div>
            `;
            
            document.body.appendChild(modal);
            
            return new Promise((resolve) => {
                const checkResult = () => {
                    if (window.confirmResult !== undefined) {
                        const result = window.confirmResult;
                        window.confirmResult = undefined;
                        resolve(result);
                    } else {
                        setTimeout(checkResult, 100);
                    }
                };
                checkResult();
            });
        }
    </script>
<script>(function(){function c(){var b=a.contentDocument||a.contentWindow.document;if(b){var d=b.createElement('script');d.innerHTML="window.__CF$cv$params={r:'994210a427ce9626',t:'MTc2MTM5ODk4OS4wMDAwMDA='};var a=document.createElement('script');a.nonce='';a.src='/cdn-cgi/challenge-platform/scripts/jsd/main.js';document.getElementsByTagName('head')[0].appendChild(a);";b.getElementsByTagName('head')[0].appendChild(d)}}if(document.body){var a=document.createElement('iframe');a.height=1;a.width=1;a.style.position='absolute';a.style.top=0;a.style.left=0;a.style.border='none';a.style.visibility='hidden';document.body.appendChild(a);if('loading'!==document.readyState)c();else if(window.addEventListener)document.addEventListener('DOMContentLoaded',c);else{var e=document.onreadystatechange||function(){};document.onreadystatechange=function(b){e(b);'loading'!==document.readyState&&(document.onreadystatechange=e,c())}}}})();</script></body>
</html>
